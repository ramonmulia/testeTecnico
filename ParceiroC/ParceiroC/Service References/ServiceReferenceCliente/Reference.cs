//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34011
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ParceiroC.ServiceReferenceCliente {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/MecanismoDeIntegracao")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Cliente_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DataNascimentoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EnderecoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefoneCelularField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelefoneResidencialField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Cliente_id {
            get {
                return this.Cliente_idField;
            }
            set {
                if ((this.Cliente_idField.Equals(value) != true)) {
                    this.Cliente_idField = value;
                    this.RaisePropertyChanged("Cliente_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DataNascimento {
            get {
                return this.DataNascimentoField;
            }
            set {
                if ((this.DataNascimentoField.Equals(value) != true)) {
                    this.DataNascimentoField = value;
                    this.RaisePropertyChanged("DataNascimento");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Endereco {
            get {
                return this.EnderecoField;
            }
            set {
                if ((object.ReferenceEquals(this.EnderecoField, value) != true)) {
                    this.EnderecoField = value;
                    this.RaisePropertyChanged("Endereco");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelefoneCelular {
            get {
                return this.TelefoneCelularField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefoneCelularField, value) != true)) {
                    this.TelefoneCelularField = value;
                    this.RaisePropertyChanged("TelefoneCelular");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelefoneResidencial {
            get {
                return this.TelefoneResidencialField;
            }
            set {
                if ((object.ReferenceEquals(this.TelefoneResidencialField, value) != true)) {
                    this.TelefoneResidencialField = value;
                    this.RaisePropertyChanged("TelefoneResidencial");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceCliente.ICliente")]
    public interface ICliente {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente/AtualizarDados", ReplyAction="http://tempuri.org/ICliente/AtualizarDadosResponse")]
        bool AtualizarDados(ParceiroC.ServiceReferenceCliente.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente/AtualizarDados", ReplyAction="http://tempuri.org/ICliente/AtualizarDadosResponse")]
        System.Threading.Tasks.Task<bool> AtualizarDadosAsync(ParceiroC.ServiceReferenceCliente.Cliente cliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente/RetornaClientes", ReplyAction="http://tempuri.org/ICliente/RetornaClientesResponse")]
        ParceiroC.ServiceReferenceCliente.Cliente[] RetornaClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICliente/RetornaClientes", ReplyAction="http://tempuri.org/ICliente/RetornaClientesResponse")]
        System.Threading.Tasks.Task<ParceiroC.ServiceReferenceCliente.Cliente[]> RetornaClientesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClienteChannel : ParceiroC.ServiceReferenceCliente.ICliente, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClienteClient : System.ServiceModel.ClientBase<ParceiroC.ServiceReferenceCliente.ICliente>, ParceiroC.ServiceReferenceCliente.ICliente {
        
        public ClienteClient() {
        }
        
        public ClienteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClienteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClienteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClienteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AtualizarDados(ParceiroC.ServiceReferenceCliente.Cliente cliente) {
            return base.Channel.AtualizarDados(cliente);
        }
        
        public System.Threading.Tasks.Task<bool> AtualizarDadosAsync(ParceiroC.ServiceReferenceCliente.Cliente cliente) {
            return base.Channel.AtualizarDadosAsync(cliente);
        }
        
        public ParceiroC.ServiceReferenceCliente.Cliente[] RetornaClientes() {
            return base.Channel.RetornaClientes();
        }
        
        public System.Threading.Tasks.Task<ParceiroC.ServiceReferenceCliente.Cliente[]> RetornaClientesAsync() {
            return base.Channel.RetornaClientesAsync();
        }
    }
}
